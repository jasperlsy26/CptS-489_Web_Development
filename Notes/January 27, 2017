function ABC (value) {
	

}

ABC();		// Valid call, "value" will === undefined

<!DOCTYPE html>
<html>
<script>

var g_root = null

function addValue() {
	var tb = document.getElementById("tbNumInput");
	var newNode = { left: null, right: null, value: tb.value };

	if (g_root == null) {
		g_root = newNode;
		return true;
	}

	var navNode = g_root;

	while (true) {
		if (node.value > tb.value) {
			if (node.left == null) {
				node.left = newNode;

				updateDisplay();
				return true;
			}

			node = node.left;
		}
		else if (node.value < tb.value) {
			if (node.right == null) {
				node.right = newNode;

				updateDisplay();
				return true;
			}

			node = node.left;
		}
		else { return false; }
	}
}

function updateDisplay() {
	var out = document.getElementById("divOutput");
	if (g_root == null) {
		out.textContent = "(tree is empty)";
	}

	if (node === undefined) { 
		out.textContent = "";
		node = g_root; 
	}
	if (node == null) { return; }
	updateDisplay(node.left);
	out.textContent += node.value + " ";
	updateDisplay(node.right);
}

</script>

<body onload="updateDisplay()" style="width=100%; height:100%">
<input type="text" id="tbNumInput" />
<br>
<input type="button" onclick="addValue()" value="Add" />
<br>
Tree contents (sorted):
<div id="divOutput" style="border: 1px solid black">&nbsp;</div>
</body>
</html>



// Define class by writing constructor function

var tree = new BST();

function bstAdd() {
	tree.add(value);
}